type Payment {
    paymentId: ID
    flightId: String!
    card: Card!
    paymentMethod: PaymentMethod!
    paymentStatus: PaymentStatus!
    paymentReference: String!
    amount: Float!
}

type Card {
    cardId: ID!
    cardNumber: String!
    cardCvc: String!
    cardType: String!
    cardHolderId: String!
    cardHolderName: String!
    expiryDate: String!
    payments: [Payment!]!
}

type PaymentMethod {
    paymentMethodId: ID!
    methodName: String!
    urlImage: String!
    active: Boolean!
    referenceCode: String!
    payments: [Payment!]!
}

type PaymentStatus {
    paymentStatusId: ID!
    statusName: String!
    message: String!
    payments: [Payment!]!
}

type Query {
    allPayments: [Payment]
    paymentById(paymentId:ID!): Payment
    allCards: [Card]
    cardById(cardId:ID!): Card
    allPaymentMethods: [PaymentMethod]
    paymentMethodById(paymentMethodId:ID!): PaymentMethod
    allPaymentStatus: [PaymentStatus]
    paymentStatusById(paymentStatusId:ID!): PaymentStatus
}

type Mutation{
    addPayment(flightId: String!, cardId: String!, paymentMethodId: String!, paymentStatusId: String!, paymentReference: String!, amount: Float!): Payment
    addPaymentMethod(methodName: String!, urlImage: String!, active: Boolean!, referenceCode: String!): PaymentMethod
    addPaymentStatus(statusName: String!, message: String!): PaymentStatus
    addCard(cardNumber: String!, cardCvc: String!, cardType: String!, cardHolderId: String!, cardHolderName: String!, expiryDate: String!): Card
}